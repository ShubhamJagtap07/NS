exp 3: 

#include <iostream>
using namespace std;

// Encrypt function for Caesar Cipher
string encrypt(string text, int key) {
    key = key % 26; // Normalize key to 0-25
    for (int i = 0; i < text.length(); i++) {
        if (isalpha(text[i])) {
            char offset = islower(text[i]) ? 'a' : 'A';
            text[i] = (text[i] - offset + key + 26) % 26 + offset;
        }
    }
    return text;
}

// Decrypt function for Caesar Cipher
string decrypt(string text, int key) {
    return encrypt(text, 26 - (key % 26));  // Reverse the shift
}

int main() {
    string text;
    int key;

    cout << "Enter text: ";
    getline(cin, text);

    cout << "Enter key: ";
    cin >> key;

    string cipher_text = encrypt(text, key);
    cout << "Encrypted text: " << cipher_text << endl;

    string decrypted_text = decrypt(cipher_text, key);
    cout << "Decrypted text: " << decrypted_text << endl;

    return 0;
}
